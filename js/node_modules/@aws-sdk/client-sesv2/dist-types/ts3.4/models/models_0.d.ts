import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { SESv2ServiceException as __BaseException } from "./SESv2ServiceException";
export declare enum ContactLanguage {
    EN = "EN",
    JA = "JA"
}
export declare enum MailType {
    MARKETING = "MARKETING",
    TRANSACTIONAL = "TRANSACTIONAL"
}
export declare enum ReviewStatus {
    DENIED = "DENIED",
    FAILED = "FAILED",
    GRANTED = "GRANTED",
    PENDING = "PENDING"
}

export interface ReviewDetails {
    
    Status?: ReviewStatus | string;
    
    CaseId?: string;
}
export declare namespace ReviewDetails {
    
    const filterSensitiveLog: (obj: ReviewDetails) => any;
}

export interface AccountDetails {
    
    MailType?: MailType | string;
    
    WebsiteURL?: string;
    
    ContactLanguage?: ContactLanguage | string;
    
    UseCaseDescription?: string;
    
    AdditionalContactEmailAddresses?: string[];
    
    ReviewDetails?: ReviewDetails;
}
export declare namespace AccountDetails {
    
    const filterSensitiveLog: (obj: AccountDetails) => any;
}

export declare class AccountSuspendedException extends __BaseException {
    readonly name: "AccountSuspendedException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<AccountSuspendedException, __BaseException>);
}

export declare class AlreadyExistsException extends __BaseException {
    readonly name: "AlreadyExistsException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>);
}

export declare class BadRequestException extends __BaseException {
    readonly name: "BadRequestException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
}
export declare enum BehaviorOnMxFailure {
    REJECT_MESSAGE = "REJECT_MESSAGE",
    USE_DEFAULT_VALUE = "USE_DEFAULT_VALUE"
}

export interface BlacklistEntry {
    
    RblName?: string;
    
    ListingTime?: Date;
    
    Description?: string;
}
export declare namespace BlacklistEntry {
    
    const filterSensitiveLog: (obj: BlacklistEntry) => any;
}

export interface Content {
    
    Data: string | undefined;
    
    Charset?: string;
}
export declare namespace Content {
    
    const filterSensitiveLog: (obj: Content) => any;
}

export interface Body {
    
    Text?: Content;
    
    Html?: Content;
}
export declare namespace Body {
    
    const filterSensitiveLog: (obj: Body) => any;
}

export interface Template {
    
    TemplateName?: string;
    
    TemplateArn?: string;
    
    TemplateData?: string;
}
export declare namespace Template {
    
    const filterSensitiveLog: (obj: Template) => any;
}

export interface BulkEmailContent {
    
    Template?: Template;
}
export declare namespace BulkEmailContent {
    
    const filterSensitiveLog: (obj: BulkEmailContent) => any;
}

export interface Destination {
    
    ToAddresses?: string[];
    
    CcAddresses?: string[];
    
    BccAddresses?: string[];
}
export declare namespace Destination {
    
    const filterSensitiveLog: (obj: Destination) => any;
}

export interface ReplacementTemplate {
    
    ReplacementTemplateData?: string;
}
export declare namespace ReplacementTemplate {
    
    const filterSensitiveLog: (obj: ReplacementTemplate) => any;
}

export interface ReplacementEmailContent {
    
    ReplacementTemplate?: ReplacementTemplate;
}
export declare namespace ReplacementEmailContent {
    
    const filterSensitiveLog: (obj: ReplacementEmailContent) => any;
}

export interface MessageTag {
    
    Name: string | undefined;
    
    Value: string | undefined;
}
export declare namespace MessageTag {
    
    const filterSensitiveLog: (obj: MessageTag) => any;
}
export interface BulkEmailEntry {
    
    Destination: Destination | undefined;
    
    ReplacementTags?: MessageTag[];
    
    ReplacementEmailContent?: ReplacementEmailContent;
}
export declare namespace BulkEmailEntry {
    
    const filterSensitiveLog: (obj: BulkEmailEntry) => any;
}
export declare enum BulkEmailStatus {
    ACCOUNT_DAILY_QUOTA_EXCEEDED = "ACCOUNT_DAILY_QUOTA_EXCEEDED",
    ACCOUNT_SENDING_PAUSED = "ACCOUNT_SENDING_PAUSED",
    ACCOUNT_SUSPENDED = "ACCOUNT_SUSPENDED",
    ACCOUNT_THROTTLED = "ACCOUNT_THROTTLED",
    CONFIGURATION_SET_NOT_FOUND = "CONFIGURATION_SET_NOT_FOUND",
    CONFIGURATION_SET_SENDING_PAUSED = "CONFIGURATION_SET_SENDING_PAUSED",
    FAILED = "FAILED",
    INVALID_PARAMETER = "INVALID_PARAMETER",
    INVALID_SENDING_POOL_NAME = "INVALID_SENDING_POOL_NAME",
    MAIL_FROM_DOMAIN_NOT_VERIFIED = "MAIL_FROM_DOMAIN_NOT_VERIFIED",
    MESSAGE_REJECTED = "MESSAGE_REJECTED",
    SUCCESS = "SUCCESS",
    TEMPLATE_NOT_FOUND = "TEMPLATE_NOT_FOUND",
    TRANSIENT_FAILURE = "TRANSIENT_FAILURE"
}

export interface BulkEmailEntryResult {
    
    Status?: BulkEmailStatus | string;
    
    Error?: string;
    
    MessageId?: string;
}
export declare namespace BulkEmailEntryResult {
    
    const filterSensitiveLog: (obj: BulkEmailEntryResult) => any;
}
export declare enum DimensionValueSource {
    EMAIL_HEADER = "EMAIL_HEADER",
    LINK_TAG = "LINK_TAG",
    MESSAGE_TAG = "MESSAGE_TAG"
}

export interface CloudWatchDimensionConfiguration {
    
    DimensionName: string | undefined;
    
    DimensionValueSource: DimensionValueSource | string | undefined;
    
    DefaultDimensionValue: string | undefined;
}
export declare namespace CloudWatchDimensionConfiguration {
    
    const filterSensitiveLog: (obj: CloudWatchDimensionConfiguration) => any;
}

export interface CloudWatchDestination {
    
    DimensionConfigurations: CloudWatchDimensionConfiguration[] | undefined;
}
export declare namespace CloudWatchDestination {
    
    const filterSensitiveLog: (obj: CloudWatchDestination) => any;
}

export declare class ConcurrentModificationException extends __BaseException {
    readonly name: "ConcurrentModificationException";
    readonly $fault: "server";
    
    constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
}

export declare class ConflictException extends __BaseException {
    readonly name: "ConflictException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare enum SubscriptionStatus {
    OPT_IN = "OPT_IN",
    OPT_OUT = "OPT_OUT"
}

export interface TopicPreference {
    
    TopicName: string | undefined;
    
    SubscriptionStatus: SubscriptionStatus | string | undefined;
}
export declare namespace TopicPreference {
    
    const filterSensitiveLog: (obj: TopicPreference) => any;
}

export interface Contact {
    
    EmailAddress?: string;
    
    TopicPreferences?: TopicPreference[];
    
    TopicDefaultPreferences?: TopicPreference[];
    
    UnsubscribeAll?: boolean;
    
    LastUpdatedTimestamp?: Date;
}
export declare namespace Contact {
    
    const filterSensitiveLog: (obj: Contact) => any;
}

export interface ContactList {
    
    ContactListName?: string;
    
    LastUpdatedTimestamp?: Date;
}
export declare namespace ContactList {
    
    const filterSensitiveLog: (obj: ContactList) => any;
}
export declare enum ContactListImportAction {
    DELETE = "DELETE",
    PUT = "PUT"
}

export interface ContactListDestination {
    
    ContactListName: string | undefined;
    
    ContactListImportAction: ContactListImportAction | string | undefined;
}
export declare namespace ContactListDestination {
    
    const filterSensitiveLog: (obj: ContactListDestination) => any;
}
export declare enum TlsPolicy {
    OPTIONAL = "OPTIONAL",
    REQUIRE = "REQUIRE"
}

export interface DeliveryOptions {
    
    TlsPolicy?: TlsPolicy | string;
    
    SendingPoolName?: string;
}
export declare namespace DeliveryOptions {
    
    const filterSensitiveLog: (obj: DeliveryOptions) => any;
}

export interface ReputationOptions {
    
    ReputationMetricsEnabled?: boolean;
    
    LastFreshStart?: Date;
}
export declare namespace ReputationOptions {
    
    const filterSensitiveLog: (obj: ReputationOptions) => any;
}

export interface SendingOptions {
    
    SendingEnabled?: boolean;
}
export declare namespace SendingOptions {
    
    const filterSensitiveLog: (obj: SendingOptions) => any;
}
export declare enum SuppressionListReason {
    BOUNCE = "BOUNCE",
    COMPLAINT = "COMPLAINT"
}

export interface SuppressionOptions {
    
    SuppressedReasons?: (SuppressionListReason | string)[];
}
export declare namespace SuppressionOptions {
    
    const filterSensitiveLog: (obj: SuppressionOptions) => any;
}

export interface Tag {
    
    Key: string | undefined;
    
    Value: string | undefined;
}
export declare namespace Tag {
    
    const filterSensitiveLog: (obj: Tag) => any;
}

export interface TrackingOptions {
    
    CustomRedirectDomain: string | undefined;
}
export declare namespace TrackingOptions {
    
    const filterSensitiveLog: (obj: TrackingOptions) => any;
}

export interface CreateConfigurationSetRequest {
    
    ConfigurationSetName: string | undefined;
    
    TrackingOptions?: TrackingOptions;
    
    DeliveryOptions?: DeliveryOptions;
    
    ReputationOptions?: ReputationOptions;
    
    SendingOptions?: SendingOptions;
    
    Tags?: Tag[];
    
    SuppressionOptions?: SuppressionOptions;
}
export declare namespace CreateConfigurationSetRequest {
    
    const filterSensitiveLog: (obj: CreateConfigurationSetRequest) => any;
}

export interface CreateConfigurationSetResponse {
}
export declare namespace CreateConfigurationSetResponse {
    
    const filterSensitiveLog: (obj: CreateConfigurationSetResponse) => any;
}

export declare class LimitExceededException extends __BaseException {
    readonly name: "LimitExceededException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
}

export declare class NotFoundException extends __BaseException {
    readonly name: "NotFoundException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}

export declare class TooManyRequestsException extends __BaseException {
    readonly name: "TooManyRequestsException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
}

export interface KinesisFirehoseDestination {
    
    IamRoleArn: string | undefined;
    
    DeliveryStreamArn: string | undefined;
}
export declare namespace KinesisFirehoseDestination {
    
    const filterSensitiveLog: (obj: KinesisFirehoseDestination) => any;
}
export declare enum EventType {
    BOUNCE = "BOUNCE",
    CLICK = "CLICK",
    COMPLAINT = "COMPLAINT",
    DELIVERY = "DELIVERY",
    DELIVERY_DELAY = "DELIVERY_DELAY",
    OPEN = "OPEN",
    REJECT = "REJECT",
    RENDERING_FAILURE = "RENDERING_FAILURE",
    SEND = "SEND",
    SUBSCRIPTION = "SUBSCRIPTION"
}

export interface PinpointDestination {
    
    ApplicationArn?: string;
}
export declare namespace PinpointDestination {
    
    const filterSensitiveLog: (obj: PinpointDestination) => any;
}

export interface SnsDestination {
    
    TopicArn: string | undefined;
}
export declare namespace SnsDestination {
    
    const filterSensitiveLog: (obj: SnsDestination) => any;
}

export interface EventDestinationDefinition {
    
    Enabled?: boolean;
    
    MatchingEventTypes?: (EventType | string)[];
    
    KinesisFirehoseDestination?: KinesisFirehoseDestination;
    
    CloudWatchDestination?: CloudWatchDestination;
    
    SnsDestination?: SnsDestination;
    
    PinpointDestination?: PinpointDestination;
}
export declare namespace EventDestinationDefinition {
    
    const filterSensitiveLog: (obj: EventDestinationDefinition) => any;
}

export interface CreateConfigurationSetEventDestinationRequest {
    
    ConfigurationSetName: string | undefined;
    
    EventDestinationName: string | undefined;
    
    EventDestination: EventDestinationDefinition | undefined;
}
export declare namespace CreateConfigurationSetEventDestinationRequest {
    
    const filterSensitiveLog: (obj: CreateConfigurationSetEventDestinationRequest) => any;
}

export interface CreateConfigurationSetEventDestinationResponse {
}
export declare namespace CreateConfigurationSetEventDestinationResponse {
    
    const filterSensitiveLog: (obj: CreateConfigurationSetEventDestinationResponse) => any;
}
export interface CreateContactRequest {
    
    ContactListName: string | undefined;
    
    EmailAddress: string | undefined;
    
    TopicPreferences?: TopicPreference[];
    
    UnsubscribeAll?: boolean;
    
    AttributesData?: string;
}
export declare namespace CreateContactRequest {
    
    const filterSensitiveLog: (obj: CreateContactRequest) => any;
}
export interface CreateContactResponse {
}
export declare namespace CreateContactResponse {
    
    const filterSensitiveLog: (obj: CreateContactResponse) => any;
}

export interface Topic {
    
    TopicName: string | undefined;
    
    DisplayName: string | undefined;
    
    Description?: string;
    
    DefaultSubscriptionStatus: SubscriptionStatus | string | undefined;
}
export declare namespace Topic {
    
    const filterSensitiveLog: (obj: Topic) => any;
}
export interface CreateContactListRequest {
    
    ContactListName: string | undefined;
    
    Topics?: Topic[];
    
    Description?: string;
    
    Tags?: Tag[];
}
export declare namespace CreateContactListRequest {
    
    const filterSensitiveLog: (obj: CreateContactListRequest) => any;
}
export interface CreateContactListResponse {
}
export declare namespace CreateContactListResponse {
    
    const filterSensitiveLog: (obj: CreateContactListResponse) => any;
}

export interface CreateCustomVerificationEmailTemplateRequest {
    
    TemplateName: string | undefined;
    
    FromEmailAddress: string | undefined;
    
    TemplateSubject: string | undefined;
    
    TemplateContent: string | undefined;
    
    SuccessRedirectionURL: string | undefined;
    
    FailureRedirectionURL: string | undefined;
}
export declare namespace CreateCustomVerificationEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: CreateCustomVerificationEmailTemplateRequest) => any;
}

export interface CreateCustomVerificationEmailTemplateResponse {
}
export declare namespace CreateCustomVerificationEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: CreateCustomVerificationEmailTemplateResponse) => any;
}

export interface CreateDedicatedIpPoolRequest {
    
    PoolName: string | undefined;
    
    Tags?: Tag[];
}
export declare namespace CreateDedicatedIpPoolRequest {
    
    const filterSensitiveLog: (obj: CreateDedicatedIpPoolRequest) => any;
}

export interface CreateDedicatedIpPoolResponse {
}
export declare namespace CreateDedicatedIpPoolResponse {
    
    const filterSensitiveLog: (obj: CreateDedicatedIpPoolResponse) => any;
}

export interface RawMessage {
    
    Data: Uint8Array | undefined;
}
export declare namespace RawMessage {
    
    const filterSensitiveLog: (obj: RawMessage) => any;
}

export interface Message {
    
    Subject: Content | undefined;
    
    Body: Body | undefined;
}
export declare namespace Message {
    
    const filterSensitiveLog: (obj: Message) => any;
}

export interface EmailContent {
    
    Simple?: Message;
    
    Raw?: RawMessage;
    
    Template?: Template;
}
export declare namespace EmailContent {
    
    const filterSensitiveLog: (obj: EmailContent) => any;
}

export interface CreateDeliverabilityTestReportRequest {
    
    ReportName?: string;
    
    FromEmailAddress: string | undefined;
    
    Content: EmailContent | undefined;
    
    Tags?: Tag[];
}
export declare namespace CreateDeliverabilityTestReportRequest {
    
    const filterSensitiveLog: (obj: CreateDeliverabilityTestReportRequest) => any;
}
export declare enum DeliverabilityTestStatus {
    COMPLETED = "COMPLETED",
    IN_PROGRESS = "IN_PROGRESS"
}

export interface CreateDeliverabilityTestReportResponse {
    
    ReportId: string | undefined;
    
    DeliverabilityTestStatus: DeliverabilityTestStatus | string | undefined;
}
export declare namespace CreateDeliverabilityTestReportResponse {
    
    const filterSensitiveLog: (obj: CreateDeliverabilityTestReportResponse) => any;
}

export declare class MailFromDomainNotVerifiedException extends __BaseException {
    readonly name: "MailFromDomainNotVerifiedException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<MailFromDomainNotVerifiedException, __BaseException>);
}

export declare class MessageRejected extends __BaseException {
    readonly name: "MessageRejected";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<MessageRejected, __BaseException>);
}

export declare class SendingPausedException extends __BaseException {
    readonly name: "SendingPausedException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<SendingPausedException, __BaseException>);
}
export declare enum DkimSigningKeyLength {
    RSA_1024_BIT = "RSA_1024_BIT",
    RSA_2048_BIT = "RSA_2048_BIT"
}

export interface DkimSigningAttributes {
    
    DomainSigningSelector?: string;
    
    DomainSigningPrivateKey?: string;
    
    NextSigningKeyLength?: DkimSigningKeyLength | string;
}
export declare namespace DkimSigningAttributes {
    
    const filterSensitiveLog: (obj: DkimSigningAttributes) => any;
}

export interface CreateEmailIdentityRequest {
    
    EmailIdentity: string | undefined;
    
    Tags?: Tag[];
    
    DkimSigningAttributes?: DkimSigningAttributes;
    
    ConfigurationSetName?: string;
}
export declare namespace CreateEmailIdentityRequest {
    
    const filterSensitiveLog: (obj: CreateEmailIdentityRequest) => any;
}
export declare enum DkimSigningAttributesOrigin {
    AWS_SES = "AWS_SES",
    EXTERNAL = "EXTERNAL"
}
export declare enum DkimStatus {
    FAILED = "FAILED",
    NOT_STARTED = "NOT_STARTED",
    PENDING = "PENDING",
    SUCCESS = "SUCCESS",
    TEMPORARY_FAILURE = "TEMPORARY_FAILURE"
}

export interface DkimAttributes {
    
    SigningEnabled?: boolean;
    
    Status?: DkimStatus | string;
    
    Tokens?: string[];
    
    SigningAttributesOrigin?: DkimSigningAttributesOrigin | string;
    
    NextSigningKeyLength?: DkimSigningKeyLength | string;
    
    CurrentSigningKeyLength?: DkimSigningKeyLength | string;
    
    LastKeyGenerationTimestamp?: Date;
}
export declare namespace DkimAttributes {
    
    const filterSensitiveLog: (obj: DkimAttributes) => any;
}
export declare enum IdentityType {
    DOMAIN = "DOMAIN",
    EMAIL_ADDRESS = "EMAIL_ADDRESS",
    MANAGED_DOMAIN = "MANAGED_DOMAIN"
}

export interface CreateEmailIdentityResponse {
    
    IdentityType?: IdentityType | string;
    
    VerifiedForSendingStatus?: boolean;
    
    DkimAttributes?: DkimAttributes;
}
export declare namespace CreateEmailIdentityResponse {
    
    const filterSensitiveLog: (obj: CreateEmailIdentityResponse) => any;
}

export interface CreateEmailIdentityPolicyRequest {
    
    EmailIdentity: string | undefined;
    
    PolicyName: string | undefined;
    
    Policy: string | undefined;
}
export declare namespace CreateEmailIdentityPolicyRequest {
    
    const filterSensitiveLog: (obj: CreateEmailIdentityPolicyRequest) => any;
}

export interface CreateEmailIdentityPolicyResponse {
}
export declare namespace CreateEmailIdentityPolicyResponse {
    
    const filterSensitiveLog: (obj: CreateEmailIdentityPolicyResponse) => any;
}

export interface EmailTemplateContent {
    
    Subject?: string;
    
    Text?: string;
    
    Html?: string;
}
export declare namespace EmailTemplateContent {
    
    const filterSensitiveLog: (obj: EmailTemplateContent) => any;
}

export interface CreateEmailTemplateRequest {
    
    TemplateName: string | undefined;
    
    TemplateContent: EmailTemplateContent | undefined;
}
export declare namespace CreateEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: CreateEmailTemplateRequest) => any;
}

export interface CreateEmailTemplateResponse {
}
export declare namespace CreateEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: CreateEmailTemplateResponse) => any;
}
export declare enum DataFormat {
    CSV = "CSV",
    JSON = "JSON"
}

export interface ImportDataSource {
    
    S3Url: string | undefined;
    
    DataFormat: DataFormat | string | undefined;
}
export declare namespace ImportDataSource {
    
    const filterSensitiveLog: (obj: ImportDataSource) => any;
}
export declare enum SuppressionListImportAction {
    DELETE = "DELETE",
    PUT = "PUT"
}

export interface SuppressionListDestination {
    
    SuppressionListImportAction: SuppressionListImportAction | string | undefined;
}
export declare namespace SuppressionListDestination {
    
    const filterSensitiveLog: (obj: SuppressionListDestination) => any;
}

export interface ImportDestination {
    
    SuppressionListDestination?: SuppressionListDestination;
    
    ContactListDestination?: ContactListDestination;
}
export declare namespace ImportDestination {
    
    const filterSensitiveLog: (obj: ImportDestination) => any;
}

export interface CreateImportJobRequest {
    
    ImportDestination: ImportDestination | undefined;
    
    ImportDataSource: ImportDataSource | undefined;
}
export declare namespace CreateImportJobRequest {
    
    const filterSensitiveLog: (obj: CreateImportJobRequest) => any;
}

export interface CreateImportJobResponse {
    
    JobId?: string;
}
export declare namespace CreateImportJobResponse {
    
    const filterSensitiveLog: (obj: CreateImportJobResponse) => any;
}

export interface CustomVerificationEmailTemplateMetadata {
    
    TemplateName?: string;
    
    FromEmailAddress?: string;
    
    TemplateSubject?: string;
    
    SuccessRedirectionURL?: string;
    
    FailureRedirectionURL?: string;
}
export declare namespace CustomVerificationEmailTemplateMetadata {
    
    const filterSensitiveLog: (obj: CustomVerificationEmailTemplateMetadata) => any;
}

export interface DomainIspPlacement {
    
    IspName?: string;
    
    InboxRawCount?: number;
    
    SpamRawCount?: number;
    
    InboxPercentage?: number;
    
    SpamPercentage?: number;
}
export declare namespace DomainIspPlacement {
    
    const filterSensitiveLog: (obj: DomainIspPlacement) => any;
}

export interface VolumeStatistics {
    
    InboxRawCount?: number;
    
    SpamRawCount?: number;
    
    ProjectedInbox?: number;
    
    ProjectedSpam?: number;
}
export declare namespace VolumeStatistics {
    
    const filterSensitiveLog: (obj: VolumeStatistics) => any;
}

export interface DailyVolume {
    
    StartDate?: Date;
    
    VolumeStatistics?: VolumeStatistics;
    
    DomainIspPlacements?: DomainIspPlacement[];
}
export declare namespace DailyVolume {
    
    const filterSensitiveLog: (obj: DailyVolume) => any;
}
export declare enum WarmupStatus {
    DONE = "DONE",
    IN_PROGRESS = "IN_PROGRESS"
}

export interface DedicatedIp {
    
    Ip: string | undefined;
    
    WarmupStatus: WarmupStatus | string | undefined;
    
    WarmupPercentage: number | undefined;
    
    PoolName?: string;
}
export declare namespace DedicatedIp {
    
    const filterSensitiveLog: (obj: DedicatedIp) => any;
}

export interface DeleteConfigurationSetRequest {
    
    ConfigurationSetName: string | undefined;
}
export declare namespace DeleteConfigurationSetRequest {
    
    const filterSensitiveLog: (obj: DeleteConfigurationSetRequest) => any;
}

export interface DeleteConfigurationSetResponse {
}
export declare namespace DeleteConfigurationSetResponse {
    
    const filterSensitiveLog: (obj: DeleteConfigurationSetResponse) => any;
}

export interface DeleteConfigurationSetEventDestinationRequest {
    
    ConfigurationSetName: string | undefined;
    
    EventDestinationName: string | undefined;
}
export declare namespace DeleteConfigurationSetEventDestinationRequest {
    
    const filterSensitiveLog: (obj: DeleteConfigurationSetEventDestinationRequest) => any;
}

export interface DeleteConfigurationSetEventDestinationResponse {
}
export declare namespace DeleteConfigurationSetEventDestinationResponse {
    
    const filterSensitiveLog: (obj: DeleteConfigurationSetEventDestinationResponse) => any;
}
export interface DeleteContactRequest {
    
    ContactListName: string | undefined;
    
    EmailAddress: string | undefined;
}
export declare namespace DeleteContactRequest {
    
    const filterSensitiveLog: (obj: DeleteContactRequest) => any;
}
export interface DeleteContactResponse {
}
export declare namespace DeleteContactResponse {
    
    const filterSensitiveLog: (obj: DeleteContactResponse) => any;
}
export interface DeleteContactListRequest {
    
    ContactListName: string | undefined;
}
export declare namespace DeleteContactListRequest {
    
    const filterSensitiveLog: (obj: DeleteContactListRequest) => any;
}
export interface DeleteContactListResponse {
}
export declare namespace DeleteContactListResponse {
    
    const filterSensitiveLog: (obj: DeleteContactListResponse) => any;
}

export interface DeleteCustomVerificationEmailTemplateRequest {
    
    TemplateName: string | undefined;
}
export declare namespace DeleteCustomVerificationEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: DeleteCustomVerificationEmailTemplateRequest) => any;
}

export interface DeleteCustomVerificationEmailTemplateResponse {
}
export declare namespace DeleteCustomVerificationEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: DeleteCustomVerificationEmailTemplateResponse) => any;
}

export interface DeleteDedicatedIpPoolRequest {
    
    PoolName: string | undefined;
}
export declare namespace DeleteDedicatedIpPoolRequest {
    
    const filterSensitiveLog: (obj: DeleteDedicatedIpPoolRequest) => any;
}

export interface DeleteDedicatedIpPoolResponse {
}
export declare namespace DeleteDedicatedIpPoolResponse {
    
    const filterSensitiveLog: (obj: DeleteDedicatedIpPoolResponse) => any;
}

export interface DeleteEmailIdentityRequest {
    
    EmailIdentity: string | undefined;
}
export declare namespace DeleteEmailIdentityRequest {
    
    const filterSensitiveLog: (obj: DeleteEmailIdentityRequest) => any;
}

export interface DeleteEmailIdentityResponse {
}
export declare namespace DeleteEmailIdentityResponse {
    
    const filterSensitiveLog: (obj: DeleteEmailIdentityResponse) => any;
}

export interface DeleteEmailIdentityPolicyRequest {
    
    EmailIdentity: string | undefined;
    
    PolicyName: string | undefined;
}
export declare namespace DeleteEmailIdentityPolicyRequest {
    
    const filterSensitiveLog: (obj: DeleteEmailIdentityPolicyRequest) => any;
}

export interface DeleteEmailIdentityPolicyResponse {
}
export declare namespace DeleteEmailIdentityPolicyResponse {
    
    const filterSensitiveLog: (obj: DeleteEmailIdentityPolicyResponse) => any;
}

export interface DeleteEmailTemplateRequest {
    
    TemplateName: string | undefined;
}
export declare namespace DeleteEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: DeleteEmailTemplateRequest) => any;
}

export interface DeleteEmailTemplateResponse {
}
export declare namespace DeleteEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: DeleteEmailTemplateResponse) => any;
}

export interface DeleteSuppressedDestinationRequest {
    
    EmailAddress: string | undefined;
}
export declare namespace DeleteSuppressedDestinationRequest {
    
    const filterSensitiveLog: (obj: DeleteSuppressedDestinationRequest) => any;
}

export interface DeleteSuppressedDestinationResponse {
}
export declare namespace DeleteSuppressedDestinationResponse {
    
    const filterSensitiveLog: (obj: DeleteSuppressedDestinationResponse) => any;
}
export declare enum DeliverabilityDashboardAccountStatus {
    ACTIVE = "ACTIVE",
    DISABLED = "DISABLED",
    PENDING_EXPIRATION = "PENDING_EXPIRATION"
}

export interface DeliverabilityTestReport {
    
    ReportId?: string;
    
    ReportName?: string;
    
    Subject?: string;
    
    FromEmailAddress?: string;
    
    CreateDate?: Date;
    
    DeliverabilityTestStatus?: DeliverabilityTestStatus | string;
}
export declare namespace DeliverabilityTestReport {
    
    const filterSensitiveLog: (obj: DeliverabilityTestReport) => any;
}

export interface DomainDeliverabilityCampaign {
    
    CampaignId?: string;
    
    ImageUrl?: string;
    
    Subject?: string;
    
    FromAddress?: string;
    
    SendingIps?: string[];
    
    FirstSeenDateTime?: Date;
    
    LastSeenDateTime?: Date;
    
    InboxCount?: number;
    
    SpamCount?: number;
    
    ReadRate?: number;
    
    DeleteRate?: number;
    
    ReadDeleteRate?: number;
    
    ProjectedVolume?: number;
    
    Esps?: string[];
}
export declare namespace DomainDeliverabilityCampaign {
    
    const filterSensitiveLog: (obj: DomainDeliverabilityCampaign) => any;
}

export interface InboxPlacementTrackingOption {
    
    Global?: boolean;
    
    TrackedIsps?: string[];
}
export declare namespace InboxPlacementTrackingOption {
    
    const filterSensitiveLog: (obj: InboxPlacementTrackingOption) => any;
}

export interface DomainDeliverabilityTrackingOption {
    
    Domain?: string;
    
    SubscriptionStartDate?: Date;
    
    InboxPlacementTrackingOption?: InboxPlacementTrackingOption;
}
export declare namespace DomainDeliverabilityTrackingOption {
    
    const filterSensitiveLog: (obj: DomainDeliverabilityTrackingOption) => any;
}

export interface EmailTemplateMetadata {
    
    TemplateName?: string;
    
    CreatedTimestamp?: Date;
}
export declare namespace EmailTemplateMetadata {
    
    const filterSensitiveLog: (obj: EmailTemplateMetadata) => any;
}

export interface EventDestination {
    
    Name: string | undefined;
    
    Enabled?: boolean;
    
    MatchingEventTypes: (EventType | string)[] | undefined;
    
    KinesisFirehoseDestination?: KinesisFirehoseDestination;
    
    CloudWatchDestination?: CloudWatchDestination;
    
    SnsDestination?: SnsDestination;
    
    PinpointDestination?: PinpointDestination;
}
export declare namespace EventDestination {
    
    const filterSensitiveLog: (obj: EventDestination) => any;
}

export interface FailureInfo {
    
    FailedRecordsS3Url?: string;
    
    ErrorMessage?: string;
}
export declare namespace FailureInfo {
    
    const filterSensitiveLog: (obj: FailureInfo) => any;
}

export interface GetAccountRequest {
}
export declare namespace GetAccountRequest {
    
    const filterSensitiveLog: (obj: GetAccountRequest) => any;
}

export interface SendQuota {
    
    Max24HourSend?: number;
    
    MaxSendRate?: number;
    
    SentLast24Hours?: number;
}
export declare namespace SendQuota {
    
    const filterSensitiveLog: (obj: SendQuota) => any;
}

export interface SuppressionAttributes {
    
    SuppressedReasons?: (SuppressionListReason | string)[];
}
export declare namespace SuppressionAttributes {
    
    const filterSensitiveLog: (obj: SuppressionAttributes) => any;
}

export interface GetAccountResponse {
    
    DedicatedIpAutoWarmupEnabled?: boolean;
    
    EnforcementStatus?: string;
    
    ProductionAccessEnabled?: boolean;
    
    SendQuota?: SendQuota;
    
    SendingEnabled?: boolean;
    
    SuppressionAttributes?: SuppressionAttributes;
    
    Details?: AccountDetails;
}
export declare namespace GetAccountResponse {
    
    const filterSensitiveLog: (obj: GetAccountResponse) => any;
}

export interface GetBlacklistReportsRequest {
    
    BlacklistItemNames: string[] | undefined;
}
export declare namespace GetBlacklistReportsRequest {
    
    const filterSensitiveLog: (obj: GetBlacklistReportsRequest) => any;
}

export interface GetBlacklistReportsResponse {
    
    BlacklistReport: {
        [key: string]: BlacklistEntry[];
    } | undefined;
}
export declare namespace GetBlacklistReportsResponse {
    
    const filterSensitiveLog: (obj: GetBlacklistReportsResponse) => any;
}

export interface GetConfigurationSetRequest {
    
    ConfigurationSetName: string | undefined;
}
export declare namespace GetConfigurationSetRequest {
    
    const filterSensitiveLog: (obj: GetConfigurationSetRequest) => any;
}

export interface GetConfigurationSetResponse {
    
    ConfigurationSetName?: string;
    
    TrackingOptions?: TrackingOptions;
    
    DeliveryOptions?: DeliveryOptions;
    
    ReputationOptions?: ReputationOptions;
    
    SendingOptions?: SendingOptions;
    
    Tags?: Tag[];
    
    SuppressionOptions?: SuppressionOptions;
}
export declare namespace GetConfigurationSetResponse {
    
    const filterSensitiveLog: (obj: GetConfigurationSetResponse) => any;
}

export interface GetConfigurationSetEventDestinationsRequest {
    
    ConfigurationSetName: string | undefined;
}
export declare namespace GetConfigurationSetEventDestinationsRequest {
    
    const filterSensitiveLog: (obj: GetConfigurationSetEventDestinationsRequest) => any;
}

export interface GetConfigurationSetEventDestinationsResponse {
    
    EventDestinations?: EventDestination[];
}
export declare namespace GetConfigurationSetEventDestinationsResponse {
    
    const filterSensitiveLog: (obj: GetConfigurationSetEventDestinationsResponse) => any;
}
export interface GetContactRequest {
    
    ContactListName: string | undefined;
    
    EmailAddress: string | undefined;
}
export declare namespace GetContactRequest {
    
    const filterSensitiveLog: (obj: GetContactRequest) => any;
}
export interface GetContactResponse {
    
    ContactListName?: string;
    
    EmailAddress?: string;
    
    TopicPreferences?: TopicPreference[];
    
    TopicDefaultPreferences?: TopicPreference[];
    
    UnsubscribeAll?: boolean;
    
    AttributesData?: string;
    
    CreatedTimestamp?: Date;
    
    LastUpdatedTimestamp?: Date;
}
export declare namespace GetContactResponse {
    
    const filterSensitiveLog: (obj: GetContactResponse) => any;
}
export interface GetContactListRequest {
    
    ContactListName: string | undefined;
}
export declare namespace GetContactListRequest {
    
    const filterSensitiveLog: (obj: GetContactListRequest) => any;
}
export interface GetContactListResponse {
    
    ContactListName?: string;
    
    Topics?: Topic[];
    
    Description?: string;
    
    CreatedTimestamp?: Date;
    
    LastUpdatedTimestamp?: Date;
    
    Tags?: Tag[];
}
export declare namespace GetContactListResponse {
    
    const filterSensitiveLog: (obj: GetContactListResponse) => any;
}

export interface GetCustomVerificationEmailTemplateRequest {
    
    TemplateName: string | undefined;
}
export declare namespace GetCustomVerificationEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: GetCustomVerificationEmailTemplateRequest) => any;
}

export interface GetCustomVerificationEmailTemplateResponse {
    
    TemplateName?: string;
    
    FromEmailAddress?: string;
    
    TemplateSubject?: string;
    
    TemplateContent?: string;
    
    SuccessRedirectionURL?: string;
    
    FailureRedirectionURL?: string;
}
export declare namespace GetCustomVerificationEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: GetCustomVerificationEmailTemplateResponse) => any;
}

export interface GetDedicatedIpRequest {
    
    Ip: string | undefined;
}
export declare namespace GetDedicatedIpRequest {
    
    const filterSensitiveLog: (obj: GetDedicatedIpRequest) => any;
}

export interface GetDedicatedIpResponse {
    
    DedicatedIp?: DedicatedIp;
}
export declare namespace GetDedicatedIpResponse {
    
    const filterSensitiveLog: (obj: GetDedicatedIpResponse) => any;
}

export interface GetDedicatedIpsRequest {
    
    PoolName?: string;
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace GetDedicatedIpsRequest {
    
    const filterSensitiveLog: (obj: GetDedicatedIpsRequest) => any;
}

export interface GetDedicatedIpsResponse {
    
    DedicatedIps?: DedicatedIp[];
    
    NextToken?: string;
}
export declare namespace GetDedicatedIpsResponse {
    
    const filterSensitiveLog: (obj: GetDedicatedIpsResponse) => any;
}

export interface GetDeliverabilityDashboardOptionsRequest {
}
export declare namespace GetDeliverabilityDashboardOptionsRequest {
    
    const filterSensitiveLog: (obj: GetDeliverabilityDashboardOptionsRequest) => any;
}

export interface GetDeliverabilityDashboardOptionsResponse {
    
    DashboardEnabled: boolean | undefined;
    
    SubscriptionExpiryDate?: Date;
    
    AccountStatus?: DeliverabilityDashboardAccountStatus | string;
    
    ActiveSubscribedDomains?: DomainDeliverabilityTrackingOption[];
    
    PendingExpirationSubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export declare namespace GetDeliverabilityDashboardOptionsResponse {
    
    const filterSensitiveLog: (obj: GetDeliverabilityDashboardOptionsResponse) => any;
}

export interface GetDeliverabilityTestReportRequest {
    
    ReportId: string | undefined;
}
export declare namespace GetDeliverabilityTestReportRequest {
    
    const filterSensitiveLog: (obj: GetDeliverabilityTestReportRequest) => any;
}

export interface PlacementStatistics {
    
    InboxPercentage?: number;
    
    SpamPercentage?: number;
    
    MissingPercentage?: number;
    
    SpfPercentage?: number;
    
    DkimPercentage?: number;
}
export declare namespace PlacementStatistics {
    
    const filterSensitiveLog: (obj: PlacementStatistics) => any;
}

export interface IspPlacement {
    
    IspName?: string;
    
    PlacementStatistics?: PlacementStatistics;
}
export declare namespace IspPlacement {
    
    const filterSensitiveLog: (obj: IspPlacement) => any;
}

export interface GetDeliverabilityTestReportResponse {
    
    DeliverabilityTestReport: DeliverabilityTestReport | undefined;
    
    OverallPlacement: PlacementStatistics | undefined;
    
    IspPlacements: IspPlacement[] | undefined;
    
    Message?: string;
    
    Tags?: Tag[];
}
export declare namespace GetDeliverabilityTestReportResponse {
    
    const filterSensitiveLog: (obj: GetDeliverabilityTestReportResponse) => any;
}

export interface GetDomainDeliverabilityCampaignRequest {
    
    CampaignId: string | undefined;
}
export declare namespace GetDomainDeliverabilityCampaignRequest {
    
    const filterSensitiveLog: (obj: GetDomainDeliverabilityCampaignRequest) => any;
}

export interface GetDomainDeliverabilityCampaignResponse {
    
    DomainDeliverabilityCampaign: DomainDeliverabilityCampaign | undefined;
}
export declare namespace GetDomainDeliverabilityCampaignResponse {
    
    const filterSensitiveLog: (obj: GetDomainDeliverabilityCampaignResponse) => any;
}

export interface GetDomainStatisticsReportRequest {
    
    Domain: string | undefined;
    
    StartDate: Date | undefined;
    
    EndDate: Date | undefined;
}
export declare namespace GetDomainStatisticsReportRequest {
    
    const filterSensitiveLog: (obj: GetDomainStatisticsReportRequest) => any;
}

export interface OverallVolume {
    
    VolumeStatistics?: VolumeStatistics;
    
    ReadRatePercent?: number;
    
    DomainIspPlacements?: DomainIspPlacement[];
}
export declare namespace OverallVolume {
    
    const filterSensitiveLog: (obj: OverallVolume) => any;
}

export interface GetDomainStatisticsReportResponse {
    
    OverallVolume: OverallVolume | undefined;
    
    DailyVolumes: DailyVolume[] | undefined;
}
export declare namespace GetDomainStatisticsReportResponse {
    
    const filterSensitiveLog: (obj: GetDomainStatisticsReportResponse) => any;
}

export interface GetEmailIdentityRequest {
    
    EmailIdentity: string | undefined;
}
export declare namespace GetEmailIdentityRequest {
    
    const filterSensitiveLog: (obj: GetEmailIdentityRequest) => any;
}
export declare enum MailFromDomainStatus {
    FAILED = "FAILED",
    PENDING = "PENDING",
    SUCCESS = "SUCCESS",
    TEMPORARY_FAILURE = "TEMPORARY_FAILURE"
}

export interface MailFromAttributes {
    
    MailFromDomain: string | undefined;
    
    MailFromDomainStatus: MailFromDomainStatus | string | undefined;
    
    BehaviorOnMxFailure: BehaviorOnMxFailure | string | undefined;
}
export declare namespace MailFromAttributes {
    
    const filterSensitiveLog: (obj: MailFromAttributes) => any;
}

export interface GetEmailIdentityResponse {
    
    IdentityType?: IdentityType | string;
    
    FeedbackForwardingStatus?: boolean;
    
    VerifiedForSendingStatus?: boolean;
    
    DkimAttributes?: DkimAttributes;
    
    MailFromAttributes?: MailFromAttributes;
    
    Policies?: {
        [key: string]: string;
    };
    
    Tags?: Tag[];
    
    ConfigurationSetName?: string;
}
export declare namespace GetEmailIdentityResponse {
    
    const filterSensitiveLog: (obj: GetEmailIdentityResponse) => any;
}

export interface GetEmailIdentityPoliciesRequest {
    
    EmailIdentity: string | undefined;
}
export declare namespace GetEmailIdentityPoliciesRequest {
    
    const filterSensitiveLog: (obj: GetEmailIdentityPoliciesRequest) => any;
}

export interface GetEmailIdentityPoliciesResponse {
    
    Policies?: {
        [key: string]: string;
    };
}
export declare namespace GetEmailIdentityPoliciesResponse {
    
    const filterSensitiveLog: (obj: GetEmailIdentityPoliciesResponse) => any;
}

export interface GetEmailTemplateRequest {
    
    TemplateName: string | undefined;
}
export declare namespace GetEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: GetEmailTemplateRequest) => any;
}

export interface GetEmailTemplateResponse {
    
    TemplateName: string | undefined;
    
    TemplateContent: EmailTemplateContent | undefined;
}
export declare namespace GetEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: GetEmailTemplateResponse) => any;
}

export interface GetImportJobRequest {
    
    JobId: string | undefined;
}
export declare namespace GetImportJobRequest {
    
    const filterSensitiveLog: (obj: GetImportJobRequest) => any;
}
export declare enum JobStatus {
    COMPLETED = "COMPLETED",
    CREATED = "CREATED",
    FAILED = "FAILED",
    PROCESSING = "PROCESSING"
}

export interface GetImportJobResponse {
    
    JobId?: string;
    
    ImportDestination?: ImportDestination;
    
    ImportDataSource?: ImportDataSource;
    
    FailureInfo?: FailureInfo;
    
    JobStatus?: JobStatus | string;
    
    CreatedTimestamp?: Date;
    
    CompletedTimestamp?: Date;
    
    ProcessedRecordsCount?: number;
    
    FailedRecordsCount?: number;
}
export declare namespace GetImportJobResponse {
    
    const filterSensitiveLog: (obj: GetImportJobResponse) => any;
}

export interface GetSuppressedDestinationRequest {
    
    EmailAddress: string | undefined;
}
export declare namespace GetSuppressedDestinationRequest {
    
    const filterSensitiveLog: (obj: GetSuppressedDestinationRequest) => any;
}

export interface SuppressedDestinationAttributes {
    
    MessageId?: string;
    
    FeedbackId?: string;
}
export declare namespace SuppressedDestinationAttributes {
    
    const filterSensitiveLog: (obj: SuppressedDestinationAttributes) => any;
}

export interface SuppressedDestination {
    
    EmailAddress: string | undefined;
    
    Reason: SuppressionListReason | string | undefined;
    
    LastUpdateTime: Date | undefined;
    
    Attributes?: SuppressedDestinationAttributes;
}
export declare namespace SuppressedDestination {
    
    const filterSensitiveLog: (obj: SuppressedDestination) => any;
}

export interface GetSuppressedDestinationResponse {
    
    SuppressedDestination: SuppressedDestination | undefined;
}
export declare namespace GetSuppressedDestinationResponse {
    
    const filterSensitiveLog: (obj: GetSuppressedDestinationResponse) => any;
}

export interface IdentityInfo {
    
    IdentityType?: IdentityType | string;
    
    IdentityName?: string;
    
    SendingEnabled?: boolean;
}
export declare namespace IdentityInfo {
    
    const filterSensitiveLog: (obj: IdentityInfo) => any;
}
export declare enum ImportDestinationType {
    CONTACT_LIST = "CONTACT_LIST",
    SUPPRESSION_LIST = "SUPPRESSION_LIST"
}

export interface ImportJobSummary {
    
    JobId?: string;
    
    ImportDestination?: ImportDestination;
    
    JobStatus?: JobStatus | string;
    
    CreatedTimestamp?: Date;
}
export declare namespace ImportJobSummary {
    
    const filterSensitiveLog: (obj: ImportJobSummary) => any;
}

export declare class InvalidNextTokenException extends __BaseException {
    readonly name: "InvalidNextTokenException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>);
}

export interface ListConfigurationSetsRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListConfigurationSetsRequest {
    
    const filterSensitiveLog: (obj: ListConfigurationSetsRequest) => any;
}

export interface ListConfigurationSetsResponse {
    
    ConfigurationSets?: string[];
    
    NextToken?: string;
}
export declare namespace ListConfigurationSetsResponse {
    
    const filterSensitiveLog: (obj: ListConfigurationSetsResponse) => any;
}
export interface ListContactListsRequest {
    
    PageSize?: number;
    
    NextToken?: string;
}
export declare namespace ListContactListsRequest {
    
    const filterSensitiveLog: (obj: ListContactListsRequest) => any;
}
export interface ListContactListsResponse {
    
    ContactLists?: ContactList[];
    
    NextToken?: string;
}
export declare namespace ListContactListsResponse {
    
    const filterSensitiveLog: (obj: ListContactListsResponse) => any;
}

export interface TopicFilter {
    
    TopicName?: string;
    
    UseDefaultIfPreferenceUnavailable?: boolean;
}
export declare namespace TopicFilter {
    
    const filterSensitiveLog: (obj: TopicFilter) => any;
}

export interface ListContactsFilter {
    
    FilteredStatus?: SubscriptionStatus | string;
    
    TopicFilter?: TopicFilter;
}
export declare namespace ListContactsFilter {
    
    const filterSensitiveLog: (obj: ListContactsFilter) => any;
}
export interface ListContactsRequest {
    
    ContactListName: string | undefined;
    
    Filter?: ListContactsFilter;
    
    PageSize?: number;
    
    NextToken?: string;
}
export declare namespace ListContactsRequest {
    
    const filterSensitiveLog: (obj: ListContactsRequest) => any;
}
export interface ListContactsResponse {
    
    Contacts?: Contact[];
    
    NextToken?: string;
}
export declare namespace ListContactsResponse {
    
    const filterSensitiveLog: (obj: ListContactsResponse) => any;
}

export interface ListCustomVerificationEmailTemplatesRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListCustomVerificationEmailTemplatesRequest {
    
    const filterSensitiveLog: (obj: ListCustomVerificationEmailTemplatesRequest) => any;
}

export interface ListCustomVerificationEmailTemplatesResponse {
    
    CustomVerificationEmailTemplates?: CustomVerificationEmailTemplateMetadata[];
    
    NextToken?: string;
}
export declare namespace ListCustomVerificationEmailTemplatesResponse {
    
    const filterSensitiveLog: (obj: ListCustomVerificationEmailTemplatesResponse) => any;
}

export interface ListDedicatedIpPoolsRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListDedicatedIpPoolsRequest {
    
    const filterSensitiveLog: (obj: ListDedicatedIpPoolsRequest) => any;
}

export interface ListDedicatedIpPoolsResponse {
    
    DedicatedIpPools?: string[];
    
    NextToken?: string;
}
export declare namespace ListDedicatedIpPoolsResponse {
    
    const filterSensitiveLog: (obj: ListDedicatedIpPoolsResponse) => any;
}

export interface ListDeliverabilityTestReportsRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListDeliverabilityTestReportsRequest {
    
    const filterSensitiveLog: (obj: ListDeliverabilityTestReportsRequest) => any;
}

export interface ListDeliverabilityTestReportsResponse {
    
    DeliverabilityTestReports: DeliverabilityTestReport[] | undefined;
    
    NextToken?: string;
}
export declare namespace ListDeliverabilityTestReportsResponse {
    
    const filterSensitiveLog: (obj: ListDeliverabilityTestReportsResponse) => any;
}

export interface ListDomainDeliverabilityCampaignsRequest {
    
    StartDate: Date | undefined;
    
    EndDate: Date | undefined;
    
    SubscribedDomain: string | undefined;
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListDomainDeliverabilityCampaignsRequest {
    
    const filterSensitiveLog: (obj: ListDomainDeliverabilityCampaignsRequest) => any;
}

export interface ListDomainDeliverabilityCampaignsResponse {
    
    DomainDeliverabilityCampaigns: DomainDeliverabilityCampaign[] | undefined;
    
    NextToken?: string;
}
export declare namespace ListDomainDeliverabilityCampaignsResponse {
    
    const filterSensitiveLog: (obj: ListDomainDeliverabilityCampaignsResponse) => any;
}

export interface ListEmailIdentitiesRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListEmailIdentitiesRequest {
    
    const filterSensitiveLog: (obj: ListEmailIdentitiesRequest) => any;
}

export interface ListEmailIdentitiesResponse {
    
    EmailIdentities?: IdentityInfo[];
    
    NextToken?: string;
}
export declare namespace ListEmailIdentitiesResponse {
    
    const filterSensitiveLog: (obj: ListEmailIdentitiesResponse) => any;
}

export interface ListEmailTemplatesRequest {
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListEmailTemplatesRequest {
    
    const filterSensitiveLog: (obj: ListEmailTemplatesRequest) => any;
}

export interface ListEmailTemplatesResponse {
    
    TemplatesMetadata?: EmailTemplateMetadata[];
    
    NextToken?: string;
}
export declare namespace ListEmailTemplatesResponse {
    
    const filterSensitiveLog: (obj: ListEmailTemplatesResponse) => any;
}

export interface ListImportJobsRequest {
    
    ImportDestinationType?: ImportDestinationType | string;
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListImportJobsRequest {
    
    const filterSensitiveLog: (obj: ListImportJobsRequest) => any;
}

export interface ListImportJobsResponse {
    
    ImportJobs?: ImportJobSummary[];
    
    NextToken?: string;
}
export declare namespace ListImportJobsResponse {
    
    const filterSensitiveLog: (obj: ListImportJobsResponse) => any;
}

export interface ListManagementOptions {
    
    ContactListName: string | undefined;
    
    TopicName?: string;
}
export declare namespace ListManagementOptions {
    
    const filterSensitiveLog: (obj: ListManagementOptions) => any;
}

export interface ListSuppressedDestinationsRequest {
    
    Reasons?: (SuppressionListReason | string)[];
    
    StartDate?: Date;
    
    EndDate?: Date;
    
    NextToken?: string;
    
    PageSize?: number;
}
export declare namespace ListSuppressedDestinationsRequest {
    
    const filterSensitiveLog: (obj: ListSuppressedDestinationsRequest) => any;
}

export interface SuppressedDestinationSummary {
    
    EmailAddress: string | undefined;
    
    Reason: SuppressionListReason | string | undefined;
    
    LastUpdateTime: Date | undefined;
}
export declare namespace SuppressedDestinationSummary {
    
    const filterSensitiveLog: (obj: SuppressedDestinationSummary) => any;
}

export interface ListSuppressedDestinationsResponse {
    
    SuppressedDestinationSummaries?: SuppressedDestinationSummary[];
    
    NextToken?: string;
}
export declare namespace ListSuppressedDestinationsResponse {
    
    const filterSensitiveLog: (obj: ListSuppressedDestinationsResponse) => any;
}
export interface ListTagsForResourceRequest {
    
    ResourceArn: string | undefined;
}
export declare namespace ListTagsForResourceRequest {
    
    const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
}
export interface ListTagsForResourceResponse {
    
    Tags: Tag[] | undefined;
}
export declare namespace ListTagsForResourceResponse {
    
    const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
}

export interface PutAccountDedicatedIpWarmupAttributesRequest {
    
    AutoWarmupEnabled?: boolean;
}
export declare namespace PutAccountDedicatedIpWarmupAttributesRequest {
    
    const filterSensitiveLog: (obj: PutAccountDedicatedIpWarmupAttributesRequest) => any;
}

export interface PutAccountDedicatedIpWarmupAttributesResponse {
}
export declare namespace PutAccountDedicatedIpWarmupAttributesResponse {
    
    const filterSensitiveLog: (obj: PutAccountDedicatedIpWarmupAttributesResponse) => any;
}

export interface PutAccountDetailsRequest {
    
    MailType: MailType | string | undefined;
    
    WebsiteURL: string | undefined;
    
    ContactLanguage?: ContactLanguage | string;
    
    UseCaseDescription: string | undefined;
    
    AdditionalContactEmailAddresses?: string[];
    
    ProductionAccessEnabled?: boolean;
}
export declare namespace PutAccountDetailsRequest {
    
    const filterSensitiveLog: (obj: PutAccountDetailsRequest) => any;
}

export interface PutAccountDetailsResponse {
}
export declare namespace PutAccountDetailsResponse {
    
    const filterSensitiveLog: (obj: PutAccountDetailsResponse) => any;
}

export interface PutAccountSendingAttributesRequest {
    
    SendingEnabled?: boolean;
}
export declare namespace PutAccountSendingAttributesRequest {
    
    const filterSensitiveLog: (obj: PutAccountSendingAttributesRequest) => any;
}

export interface PutAccountSendingAttributesResponse {
}
export declare namespace PutAccountSendingAttributesResponse {
    
    const filterSensitiveLog: (obj: PutAccountSendingAttributesResponse) => any;
}

export interface PutAccountSuppressionAttributesRequest {
    
    SuppressedReasons?: (SuppressionListReason | string)[];
}
export declare namespace PutAccountSuppressionAttributesRequest {
    
    const filterSensitiveLog: (obj: PutAccountSuppressionAttributesRequest) => any;
}

export interface PutAccountSuppressionAttributesResponse {
}
export declare namespace PutAccountSuppressionAttributesResponse {
    
    const filterSensitiveLog: (obj: PutAccountSuppressionAttributesResponse) => any;
}

export interface PutConfigurationSetDeliveryOptionsRequest {
    
    ConfigurationSetName: string | undefined;
    
    TlsPolicy?: TlsPolicy | string;
    
    SendingPoolName?: string;
}
export declare namespace PutConfigurationSetDeliveryOptionsRequest {
    
    const filterSensitiveLog: (obj: PutConfigurationSetDeliveryOptionsRequest) => any;
}

export interface PutConfigurationSetDeliveryOptionsResponse {
}
export declare namespace PutConfigurationSetDeliveryOptionsResponse {
    
    const filterSensitiveLog: (obj: PutConfigurationSetDeliveryOptionsResponse) => any;
}

export interface PutConfigurationSetReputationOptionsRequest {
    
    ConfigurationSetName: string | undefined;
    
    ReputationMetricsEnabled?: boolean;
}
export declare namespace PutConfigurationSetReputationOptionsRequest {
    
    const filterSensitiveLog: (obj: PutConfigurationSetReputationOptionsRequest) => any;
}

export interface PutConfigurationSetReputationOptionsResponse {
}
export declare namespace PutConfigurationSetReputationOptionsResponse {
    
    const filterSensitiveLog: (obj: PutConfigurationSetReputationOptionsResponse) => any;
}

export interface PutConfigurationSetSendingOptionsRequest {
    
    ConfigurationSetName: string | undefined;
    
    SendingEnabled?: boolean;
}
export declare namespace PutConfigurationSetSendingOptionsRequest {
    
    const filterSensitiveLog: (obj: PutConfigurationSetSendingOptionsRequest) => any;
}

export interface PutConfigurationSetSendingOptionsResponse {
}
export declare namespace PutConfigurationSetSendingOptionsResponse {
    
    const filterSensitiveLog: (obj: PutConfigurationSetSendingOptionsResponse) => any;
}

export interface PutConfigurationSetSuppressionOptionsRequest {
    
    ConfigurationSetName: string | undefined;
    
    SuppressedReasons?: (SuppressionListReason | string)[];
}
export declare namespace PutConfigurationSetSuppressionOptionsRequest {
    
    const filterSensitiveLog: (obj: PutConfigurationSetSuppressionOptionsRequest) => any;
}

export interface PutConfigurationSetSuppressionOptionsResponse {
}
export declare namespace PutConfigurationSetSuppressionOptionsResponse {
    
    const filterSensitiveLog: (obj: PutConfigurationSetSuppressionOptionsResponse) => any;
}

export interface PutConfigurationSetTrackingOptionsRequest {
    
    ConfigurationSetName: string | undefined;
    
    CustomRedirectDomain?: string;
}
export declare namespace PutConfigurationSetTrackingOptionsRequest {
    
    const filterSensitiveLog: (obj: PutConfigurationSetTrackingOptionsRequest) => any;
}

export interface PutConfigurationSetTrackingOptionsResponse {
}
export declare namespace PutConfigurationSetTrackingOptionsResponse {
    
    const filterSensitiveLog: (obj: PutConfigurationSetTrackingOptionsResponse) => any;
}

export interface PutDedicatedIpInPoolRequest {
    
    Ip: string | undefined;
    
    DestinationPoolName: string | undefined;
}
export declare namespace PutDedicatedIpInPoolRequest {
    
    const filterSensitiveLog: (obj: PutDedicatedIpInPoolRequest) => any;
}

export interface PutDedicatedIpInPoolResponse {
}
export declare namespace PutDedicatedIpInPoolResponse {
    
    const filterSensitiveLog: (obj: PutDedicatedIpInPoolResponse) => any;
}

export interface PutDedicatedIpWarmupAttributesRequest {
    
    Ip: string | undefined;
    
    WarmupPercentage: number | undefined;
}
export declare namespace PutDedicatedIpWarmupAttributesRequest {
    
    const filterSensitiveLog: (obj: PutDedicatedIpWarmupAttributesRequest) => any;
}

export interface PutDedicatedIpWarmupAttributesResponse {
}
export declare namespace PutDedicatedIpWarmupAttributesResponse {
    
    const filterSensitiveLog: (obj: PutDedicatedIpWarmupAttributesResponse) => any;
}

export interface PutDeliverabilityDashboardOptionRequest {
    
    DashboardEnabled: boolean | undefined;
    
    SubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export declare namespace PutDeliverabilityDashboardOptionRequest {
    
    const filterSensitiveLog: (obj: PutDeliverabilityDashboardOptionRequest) => any;
}

export interface PutDeliverabilityDashboardOptionResponse {
}
export declare namespace PutDeliverabilityDashboardOptionResponse {
    
    const filterSensitiveLog: (obj: PutDeliverabilityDashboardOptionResponse) => any;
}

export interface PutEmailIdentityConfigurationSetAttributesRequest {
    
    EmailIdentity: string | undefined;
    
    ConfigurationSetName?: string;
}
export declare namespace PutEmailIdentityConfigurationSetAttributesRequest {
    
    const filterSensitiveLog: (obj: PutEmailIdentityConfigurationSetAttributesRequest) => any;
}

export interface PutEmailIdentityConfigurationSetAttributesResponse {
}
export declare namespace PutEmailIdentityConfigurationSetAttributesResponse {
    
    const filterSensitiveLog: (obj: PutEmailIdentityConfigurationSetAttributesResponse) => any;
}

export interface PutEmailIdentityDkimAttributesRequest {
    
    EmailIdentity: string | undefined;
    
    SigningEnabled?: boolean;
}
export declare namespace PutEmailIdentityDkimAttributesRequest {
    
    const filterSensitiveLog: (obj: PutEmailIdentityDkimAttributesRequest) => any;
}

export interface PutEmailIdentityDkimAttributesResponse {
}
export declare namespace PutEmailIdentityDkimAttributesResponse {
    
    const filterSensitiveLog: (obj: PutEmailIdentityDkimAttributesResponse) => any;
}

export interface PutEmailIdentityDkimSigningAttributesRequest {
    
    EmailIdentity: string | undefined;
    
    SigningAttributesOrigin: DkimSigningAttributesOrigin | string | undefined;
    
    SigningAttributes?: DkimSigningAttributes;
}
export declare namespace PutEmailIdentityDkimSigningAttributesRequest {
    
    const filterSensitiveLog: (obj: PutEmailIdentityDkimSigningAttributesRequest) => any;
}

export interface PutEmailIdentityDkimSigningAttributesResponse {
    
    DkimStatus?: DkimStatus | string;
    
    DkimTokens?: string[];
}
export declare namespace PutEmailIdentityDkimSigningAttributesResponse {
    
    const filterSensitiveLog: (obj: PutEmailIdentityDkimSigningAttributesResponse) => any;
}

export interface PutEmailIdentityFeedbackAttributesRequest {
    
    EmailIdentity: string | undefined;
    
    EmailForwardingEnabled?: boolean;
}
export declare namespace PutEmailIdentityFeedbackAttributesRequest {
    
    const filterSensitiveLog: (obj: PutEmailIdentityFeedbackAttributesRequest) => any;
}

export interface PutEmailIdentityFeedbackAttributesResponse {
}
export declare namespace PutEmailIdentityFeedbackAttributesResponse {
    
    const filterSensitiveLog: (obj: PutEmailIdentityFeedbackAttributesResponse) => any;
}

export interface PutEmailIdentityMailFromAttributesRequest {
    
    EmailIdentity: string | undefined;
    
    MailFromDomain?: string;
    
    BehaviorOnMxFailure?: BehaviorOnMxFailure | string;
}
export declare namespace PutEmailIdentityMailFromAttributesRequest {
    
    const filterSensitiveLog: (obj: PutEmailIdentityMailFromAttributesRequest) => any;
}

export interface PutEmailIdentityMailFromAttributesResponse {
}
export declare namespace PutEmailIdentityMailFromAttributesResponse {
    
    const filterSensitiveLog: (obj: PutEmailIdentityMailFromAttributesResponse) => any;
}

export interface PutSuppressedDestinationRequest {
    
    EmailAddress: string | undefined;
    
    Reason: SuppressionListReason | string | undefined;
}
export declare namespace PutSuppressedDestinationRequest {
    
    const filterSensitiveLog: (obj: PutSuppressedDestinationRequest) => any;
}

export interface PutSuppressedDestinationResponse {
}
export declare namespace PutSuppressedDestinationResponse {
    
    const filterSensitiveLog: (obj: PutSuppressedDestinationResponse) => any;
}

export interface SendBulkEmailRequest {
    
    FromEmailAddress?: string;
    
    FromEmailAddressIdentityArn?: string;
    
    ReplyToAddresses?: string[];
    
    FeedbackForwardingEmailAddress?: string;
    
    FeedbackForwardingEmailAddressIdentityArn?: string;
    
    DefaultEmailTags?: MessageTag[];
    
    DefaultContent: BulkEmailContent | undefined;
    
    BulkEmailEntries: BulkEmailEntry[] | undefined;
    
    ConfigurationSetName?: string;
}
export declare namespace SendBulkEmailRequest {
    
    const filterSensitiveLog: (obj: SendBulkEmailRequest) => any;
}

export interface SendBulkEmailResponse {
    
    BulkEmailEntryResults: BulkEmailEntryResult[] | undefined;
}
export declare namespace SendBulkEmailResponse {
    
    const filterSensitiveLog: (obj: SendBulkEmailResponse) => any;
}

export interface SendCustomVerificationEmailRequest {
    
    EmailAddress: string | undefined;
    
    TemplateName: string | undefined;
    
    ConfigurationSetName?: string;
}
export declare namespace SendCustomVerificationEmailRequest {
    
    const filterSensitiveLog: (obj: SendCustomVerificationEmailRequest) => any;
}

export interface SendCustomVerificationEmailResponse {
    
    MessageId?: string;
}
export declare namespace SendCustomVerificationEmailResponse {
    
    const filterSensitiveLog: (obj: SendCustomVerificationEmailResponse) => any;
}

export interface SendEmailRequest {
    
    FromEmailAddress?: string;
    
    FromEmailAddressIdentityArn?: string;
    
    Destination?: Destination;
    
    ReplyToAddresses?: string[];
    
    FeedbackForwardingEmailAddress?: string;
    
    FeedbackForwardingEmailAddressIdentityArn?: string;
    
    Content: EmailContent | undefined;
    
    EmailTags?: MessageTag[];
    
    ConfigurationSetName?: string;
    
    ListManagementOptions?: ListManagementOptions;
}
export declare namespace SendEmailRequest {
    
    const filterSensitiveLog: (obj: SendEmailRequest) => any;
}

export interface SendEmailResponse {
    
    MessageId?: string;
}
export declare namespace SendEmailResponse {
    
    const filterSensitiveLog: (obj: SendEmailResponse) => any;
}
export interface TagResourceRequest {
    
    ResourceArn: string | undefined;
    
    Tags: Tag[] | undefined;
}
export declare namespace TagResourceRequest {
    
    const filterSensitiveLog: (obj: TagResourceRequest) => any;
}
export interface TagResourceResponse {
}
export declare namespace TagResourceResponse {
    
    const filterSensitiveLog: (obj: TagResourceResponse) => any;
}

export interface TestRenderEmailTemplateRequest {
    
    TemplateName: string | undefined;
    
    TemplateData: string | undefined;
}
export declare namespace TestRenderEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: TestRenderEmailTemplateRequest) => any;
}

export interface TestRenderEmailTemplateResponse {
    
    RenderedTemplate: string | undefined;
}
export declare namespace TestRenderEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: TestRenderEmailTemplateResponse) => any;
}
export interface UntagResourceRequest {
    
    ResourceArn: string | undefined;
    
    TagKeys: string[] | undefined;
}
export declare namespace UntagResourceRequest {
    
    const filterSensitiveLog: (obj: UntagResourceRequest) => any;
}
export interface UntagResourceResponse {
}
export declare namespace UntagResourceResponse {
    
    const filterSensitiveLog: (obj: UntagResourceResponse) => any;
}

export interface UpdateConfigurationSetEventDestinationRequest {
    
    ConfigurationSetName: string | undefined;
    
    EventDestinationName: string | undefined;
    
    EventDestination: EventDestinationDefinition | undefined;
}
export declare namespace UpdateConfigurationSetEventDestinationRequest {
    
    const filterSensitiveLog: (obj: UpdateConfigurationSetEventDestinationRequest) => any;
}

export interface UpdateConfigurationSetEventDestinationResponse {
}
export declare namespace UpdateConfigurationSetEventDestinationResponse {
    
    const filterSensitiveLog: (obj: UpdateConfigurationSetEventDestinationResponse) => any;
}
export interface UpdateContactRequest {
    
    ContactListName: string | undefined;
    
    EmailAddress: string | undefined;
    
    TopicPreferences?: TopicPreference[];
    
    UnsubscribeAll?: boolean;
    
    AttributesData?: string;
}
export declare namespace UpdateContactRequest {
    
    const filterSensitiveLog: (obj: UpdateContactRequest) => any;
}
export interface UpdateContactResponse {
}
export declare namespace UpdateContactResponse {
    
    const filterSensitiveLog: (obj: UpdateContactResponse) => any;
}
export interface UpdateContactListRequest {
    
    ContactListName: string | undefined;
    
    Topics?: Topic[];
    
    Description?: string;
}
export declare namespace UpdateContactListRequest {
    
    const filterSensitiveLog: (obj: UpdateContactListRequest) => any;
}
export interface UpdateContactListResponse {
}
export declare namespace UpdateContactListResponse {
    
    const filterSensitiveLog: (obj: UpdateContactListResponse) => any;
}

export interface UpdateCustomVerificationEmailTemplateRequest {
    
    TemplateName: string | undefined;
    
    FromEmailAddress: string | undefined;
    
    TemplateSubject: string | undefined;
    
    TemplateContent: string | undefined;
    
    SuccessRedirectionURL: string | undefined;
    
    FailureRedirectionURL: string | undefined;
}
export declare namespace UpdateCustomVerificationEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: UpdateCustomVerificationEmailTemplateRequest) => any;
}

export interface UpdateCustomVerificationEmailTemplateResponse {
}
export declare namespace UpdateCustomVerificationEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: UpdateCustomVerificationEmailTemplateResponse) => any;
}

export interface UpdateEmailIdentityPolicyRequest {
    
    EmailIdentity: string | undefined;
    
    PolicyName: string | undefined;
    
    Policy: string | undefined;
}
export declare namespace UpdateEmailIdentityPolicyRequest {
    
    const filterSensitiveLog: (obj: UpdateEmailIdentityPolicyRequest) => any;
}

export interface UpdateEmailIdentityPolicyResponse {
}
export declare namespace UpdateEmailIdentityPolicyResponse {
    
    const filterSensitiveLog: (obj: UpdateEmailIdentityPolicyResponse) => any;
}

export interface UpdateEmailTemplateRequest {
    
    TemplateName: string | undefined;
    
    TemplateContent: EmailTemplateContent | undefined;
}
export declare namespace UpdateEmailTemplateRequest {
    
    const filterSensitiveLog: (obj: UpdateEmailTemplateRequest) => any;
}

export interface UpdateEmailTemplateResponse {
}
export declare namespace UpdateEmailTemplateResponse {
    
    const filterSensitiveLog: (obj: UpdateEmailTemplateResponse) => any;
}
